/* SEÇÃO 11 - APROFUNDAMENTGO
	Funções IFNULL */
    
USE COMERCIO;

SHOW TABLES;

SELECT C.NOME, 
	   IFNULL(C.E_MAIL,'E-MAIL NÃO INFORMADO') AS 'E_MAIL', 
       E.ESTADO, 
       T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E ON C.ID_CLIENTE = E.FK_CLIENTE
INNER JOIN TELEFONE T ON C.ID_CLIENTE = T.FK_CLIENTE;

/* CRIANDO UMA VIEW
Ela é uma função que serve como um ponteiro para uma query*/

CREATE VIEW RELATORIO_GERAL AS 
SELECT  C.NOME, 
		C.SEXO,
        E_MAIL,
        T.TIPO,
        T.NUMERO,
        E.BAIRRO,
        E.CIDADE,
        E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E ON C.ID_CLIENTE = E.FK_CLIENTE
INNER JOIN TELEFONE T ON C.ID_CLIENTE = T.FK_CLIENTE;

SELECT * FROM RELATORIO_GERAL;

/* PARA VISUALIZAR AS VIEWS CRIADAS BASTA USAR O COMANDO SHOW TABLES
	ELE NÃO DUPLICA OS DADOS NO BANCO, ELE CRIA UMA TABELA VIRTUAL
    POR ISSO É INTERESSANTE QUANDO CRIAR UMA VIEW COLOCAR UM IDENTIFICADOR QUE AQUELA TABELA É UMA VIEW*/
    
DROP VIEW RELATORIO_GERAL; # APAGANDO UMA VIEW

/* CUIDADO: É PERMITIDO FAZER UPDATE EM UMA VIEW COM JOIN
NÃO É PERMITIDO FAZER DELETE OU INSERT */


/* ORDENANDO OS DADOS COM ORDER BY */


SELECT C.NOME, 
	   IFNULL(C.E_MAIL,'E-MAIL NÃO INFORMADO') AS 'E_MAIL', 
       E.ESTADO, 
       T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E ON C.ID_CLIENTE = E.FK_CLIENTE
INNER JOIN TELEFONE T ON C.ID_CLIENTE = T.FK_CLIENTE
ORDER BY C.SEXO, C.NOME;
    

